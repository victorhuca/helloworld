
runmqsc DUSL363DIG

define listener(CLIENT.15300) TRPTYPE(TCP) PORT(15300)
     9 : define listener(CLIENT.15300) TRPTYPE(TCP) PORT(15300)
AMQ8626I: IBM MQ listener created.
define listener(SERVER.15000) TRPTYPE(TCP) PORT(15000)
    10 : define listener(SERVER.15000) TRPTYPE(TCP) PORT(15000)
AMQ8626I: IBM MQ listener created.

start listener(CLIENT.15300)
    11 : start listener(CLIENT.15300)
AMQ8021I: Request to start IBM MQ listener accepted.
start listener(SERVER.15000)
    12 : start listener(SERVER.15000)
AMQ8021I: Request to start IBM MQ listener accepted.

end

[mqm@usl20144363 ~]$ ps -ef | grep lsr
mqm      106592 103852  0 16:15 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DUSL363DIG -t TCP -p 15300
mqm      106658 103852  0 16:16 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DUSL363DIG -t TCP -p 15000
mqm      106784 100916  0 16:17 pts/1    00:00:00 grep --color=auto lsr

 runmqsc DCAL363DIG
 
 define listener(CLIENT.15310) TRPTYPE(TCP) PORT(15310)
     1 : define listener(CLIENT.15310) TRPTYPE(TCP) PORT(15310)
AMQ8626I: IBM MQ listener created.
define listener(SERVER.15010) TRPTYPE(TCP) PORT(15010)
     2 : define listener(SERVER.15010) TRPTYPE(TCP) PORT(15010)
AMQ8626I: IBM MQ listener created.
start listener(CLIENT.15310)
     3 : start listener(CLIENT.15310)
AMQ8021I: Request to start IBM MQ listener accepted.
start listener(SERVER.15010)
     4 : start listener(SERVER.15010)
AMQ8021I: Request to start IBM MQ listener accepted.
end

[mqm@usl20144363 ~]$ ps -ef | grep lsr
mqm      106592 103852  0 16:15 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DUSL363DIG -t TCP -p 15300
mqm      106658 103852  0 16:16 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DUSL363DIG -t TCP -p 15000
mqm      107717 102643  0 16:22 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DCAL363DIG -t TCP -p 15310
mqm      107773 102643  0 16:23 ?        00:00:00 /opt/IBM/mqm91/bin/runmqlsr -r -m DCAL363DIG -t TCP -p 15010
mqm      107800 100916  0 16:23 pts/1    00:00:00 grep --color=auto lsr


#### Define receiver channel first

runmqsc DCAL363DIG

DEFINE CHANNEL('TO.DCAL363DIG.TUS01') + 
CHLTYPE(CLUSRCVR) + 
CONNAME('161.130.137.201(15010)') + 
CONVERT(NO) + 
DESCR('Cluster Channel to DCAL363DIG on usl20144363.us.hsbc') + 
CLUSTER('TUSCLUS01') + 
SSLCIPH(' ') +
SSLPEER(' ') +
MCAUSER(' ') +
REPLACE 

#### define sender channel
runmqsc DCAL363DIG

DEFINE CHANNEL('TO.FR00QR0.TUS01') + 
CHLTYPE(CLUSSDR) + 
CONNAME('FR00QR0.US.HSBC(23170)') + 
CONVERT(NO) + 
DESCR('Cluster Channel to full repository on FR00QR0') + 
CLUSTER('TUSCLUS01') + 
SSLCIPH(' ') +
SSLPEER(' ') +
MCAUSER(' ') +
REPLACE  


dis chs(*)
     2 : dis chs(*)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.DCAL363DIG.TUS01)            CHLTYPE(CLUSRCVR)
   CONNAME(161.130.94.140)                 CURRENT
   RQMNAME(FR00QR0)                        STATUS(RUNNING)
   SUBSTATE(RECEIVE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.DCAL363DIG.TUS01)            CHLTYPE(CLUSRCVR)
   CONNAME(160.16.99.242)                  CURRENT
   RQMNAME(FR01QR1)                        STATUS(RUNNING)
   SUBSTATE(RECEIVE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.FR00QR0.TUS01)               CHLTYPE(CLUSSDR)
   CONNAME(161.130.94.140(23170))          CURRENT
   RQMNAME(FR00QR0)                        STATUS(RUNNING)
   SUBSTATE(MQGET)                         XMITQ(SYSTEM.CLUSTER.TRANSMIT.QUEUE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.FR01QR1.TUS01)               CHLTYPE(CLUSSDR)
   CONNAME(160.16.99.242(23171))           CURRENT
   RQMNAME(FR01QR1)                        STATUS(RUNNING)
   SUBSTATE(MQGET)                         XMITQ(SYSTEM.CLUSTER.TRANSMIT.QUEUE)

define chl(CA.CBIL.ALL.SSL) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
define chl(CA.DTP_AFIS.SSL) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
define chl(CA.MBR.ALL.SSL) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
define chl(CA_DTP.GSI.SSL) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
define chl(RCA.DCO.REQ) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
define chl(RCA.DPO.REQ) CHLTYPE(SVRCONN) MCAUSER('wasadm') SSLPEER(' ') SSLCIPH(ECDHE_RSA_AES_256_CBC_SHA384)
   
runmqsc DUSL363DIG

DEFINE CHANNEL('TO.DUSL363DIG.TUS01') + 
CHLTYPE(CLUSRCVR) + 
CONNAME('161.130.137.201(15000)') + 
CONVERT(NO) + 
DESCR('Cluster Channel to DUSL363DIG on usl20144363.us.hsbc') + 
CLUSTER('TUSCLUS01') + 
SSLCIPH(' ') +
SSLPEER(' ') +
MCAUSER(' ') +
REPLACE 

DEFINE CHANNEL('TO.FR00QR0.TUS01') + 
CHLTYPE(CLUSSDR) + 
CONNAME('FR00QR0.US.HSBC(23170)') + 
CONVERT(NO) + 
DESCR('Cluster Channel to full repository on FR00QR0') + 
CLUSTER('TUSCLUS01') + 
SSLCIPH(' ') +
SSLPEER(' ') +
MCAUSER(' ') +
REPLACE

dis chs(*)
     3 : dis chs(*)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.DUSL363DIG.TUS01)            CHLTYPE(CLUSRCVR)
   CONNAME(161.130.94.140)                 CURRENT
   RQMNAME(FR00QR0)                        STATUS(RUNNING)
   SUBSTATE(RECEIVE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.DUSL363DIG.TUS01)            CHLTYPE(CLUSRCVR)
   CONNAME(160.16.99.242)                  CURRENT
   RQMNAME(FR01QR1)                        STATUS(RUNNING)
   SUBSTATE(RECEIVE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.FR00QR0.TUS01)               CHLTYPE(CLUSSDR)
   CONNAME(161.130.94.140(23170))          CURRENT
   RQMNAME(FR00QR0)                        STATUS(RUNNING)
   SUBSTATE(MQGET)                         XMITQ(SYSTEM.CLUSTER.TRANSMIT.QUEUE)
AMQ8417I: Display Channel Status details.
   CHANNEL(TO.FR01QR1.TUS01)               CHLTYPE(CLUSSDR)
   CONNAME(160.16.99.242(23171))           CURRENT
   RQMNAME(FR01QR1)                        STATUS(RUNNING)
   SUBSTATE(MQGET)                         XMITQ(SYSTEM.CLUSTER.TRANSMIT.QUEUE)
   
   
   
Joseph P McKenna/HBCA/HSBC: dis qs(<name> or CA*) LPUTTIME 
10:33:12 AM: Joseph P McKenna/HBCA/HSBC: that command tells you when the last message was PUT to a queue 
10:33:26 AM: Joseph P McKenna/HBCA/HSBC: dis qs(<name> or CA*) LGETTIME 
10:33:33 AM: Joseph P McKenna/HBCA/HSBC: tells you when it is last read 
10:33:51 AM: Joseph P McKenna/HBCA/HSBC: dis chs(*) msgs will tell you how many messages came up   

for production:
 runmqsc PNLL358CAD
 
 stop listener(CLIENT.27310)
 stop listener(SERVER.27010)
 
 runmqsc PNLL358USD
 
stop listener(CLIENT.27300) 
stop listener(SERVER.27000)
